// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

model User {
  userId                  Int                     @id @default(autoincrement())
  username                String                  @unique
  password                String
  name                    String
  gender                  Gender
  age                     Int?
  bodyType                String?
  bmi                     Float?
  imageUrl                String?
  foodRecommendations     UserFoodRecommendations[]
  activityRecommendations UserActivityRecommendations[]
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt    
}

model Food {
  foodId                  Int                     @id
  menu                    String
  calories                Float
  protein                 Float
  fat                     Float
  carbo                   Float
  image                   String
  category                String
  foodRecommendations     UserFoodRecommendations[]
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt    
}

model Activity {
  activityId              Int                     @id @default(autoincrement())
  activity                String                  @unique
  category                String
  calPerHour              Float
  activityRecommendations UserActivityRecommendations[]
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt    
}

model UserFoodRecommendations {
  user                    User                    @relation(fields: [userId], references: [userId])
  userId                  Int
  food                    Food                    @relation(fields: [foodId], references: [foodId], onDelete: Cascade)
  foodId                  Int

  @@id([userId, foodId])
}

model UserActivityRecommendations {
  user                    User                    @relation(fields: [userId], references: [userId])
  userId                  Int
  activity                Activity                @relation(fields: [activityId], references: [activityId], onDelete: Cascade)
  activityId              Int

  @@id([userId, activityId])
}
